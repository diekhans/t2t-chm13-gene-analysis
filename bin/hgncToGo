#!/usr/bin/env python3

import sys
import json
import logging
import argparse
import requests
import functools
from retry import retry
from pycbio.sys import fileOps
from pycbio.sys.objDict import ObjDict
from pycbio.tsv import TsvReader

debug = False

def parseArgs():
    usage = """
    look up GO terms for HGNC ids
    """
    parser = argparse.ArgumentParser(description=usage)
    parser.add_argument('inHgnc',
                        help="")
    parser.add_argument('outGoTsv',
                        help="")
    args = parser.parse_args()
    return args

def strArraySplit(commaStr):
    "parser for comma-separated string list into a list"
    if len(commaStr) == 0:
        return []
    return commaStr.split(",")

def strArrayJoin(strs):
    "formatter for a list into a comma separated string"
    return ",".join(strs)

def parseMonarchAssocs(assocs):
    goIds = set()
    for assoc in assocs.associations:
        objId = assoc.object.id
        if objId.startswith("GO:"):
            goIds.add(objId)
    return goIds

@retry(exceptions=(requests.exceptions.HTTPError,), tries=25, delay=1, max_delay=10, backoff=1)
def queryMonarch(hgncId):
    resp = requests.get(f"https://api.monarchinitiative.org/api/bioentity/gene/{hgncId}/function")
    resp.raise_for_status()
    return resp.json(object_pairs_hook=ObjDict)

@functools.lru_cache(maxsize=None)
def lookupGoIdsForGene(hgncId):
    assocs = queryMonarch(hgncId)
    if debug:
        json.dump(assocs, sys.stderr, indent=4)
    goIds = parseMonarchAssocs(assocs)
    return frozenset(goIds)

def hgncToGo(inFh, outFh):
    fileOps.prRowv(outFh, "hgncId", "goId")
    done = set()
    for hgncId in fileOps.iterLines(inFh):
        if hgncId not in done:
            for go in lookupGoIdsForGene(hgncId):
                fileOps.prRowv(outFh, hgncId, go)
            outFh.flush()
            done.add(hgncId)

def main(args):
    logging.basicConfig()

    with fileOps.opengz(args.inHgnc) as inFh:
        with fileOps.opengz(args.outGoTsv, "w") as outFh:
            hgncToGo(inFh, outFh)

main(parseArgs())
